[Leetcode-树]

[-遍历二叉树]
94(key=基础) 100 101 104(key=一行代码) 110(key=深度结合递归好题) 
112(key=分情况)
226(key=交换左右) 
530(key=中序遍历递增) 543(key=深度与直径)
563(key=算总值) 572(key=每一步检查) 606 
102(key=经典题队列实现) 637(key=队列实现) 
653(key=Hash) 671(key=记录次小值)
508 510 951(key=翻转二叉树等价)

[-二叉搜索树中序遍历]
235(key=搜索有序树) 501(key=中序遍历递增) 98(key=中序遍历) 230 538

[-层次遍历]
111(key=层次遍历) 103 107 116 429 513 515 545 623 662 
958(key=完全二叉树)

[-生成二叉树]
617 95(key=暴力遍历) 96(key=动态规划) 108(key=二分) 
105(key=前序中序构造经典题) 
106(key=中序后序构造经典题)
889(key=前序后序构造经典题)
450(key=二叉搜索树删除元素)
654(key=最大二叉树)
669(value=4)
701(key=二叉搜索树插入 value=4)
894(key=构造完整二叉树)
998(key=最大二叉树)

[-记录路径]
113 114 988(key=叶子到根)

[-叶子节点]
129

[-非递归实现]
144 145

[-公共祖先]
236(key=经典解法)

[-树形dp]
337

[-前缀和]
437

[-二叉树序列化]
449 536 652 655(key=二维数组)

[-所有路径]
687(key=一样数字的路径) 863(key=距离与差值) 
979(key=分硬币)

[-图与树]
684(key=删掉图的一条边)

[-剪枝]
814 865(key=最大深度的子树)

[-中等题]
971 742 919
1008 1026 1038 1104 
1110 1123 1130 1145 1161 1261 1302 1305 1315 1325 
1339 1367 1372 1379 1443 1448 1457 1466 1530 1600 1609

[-困难题]
99 124 297 685 834 968 987 1028 1719 1766

